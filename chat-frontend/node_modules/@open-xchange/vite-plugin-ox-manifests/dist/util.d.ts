import type { ResolvedConfig, ViteDevServer, Rollup } from 'vite';
export type Dict<T = unknown> = Record<string, T>;
export interface OxManifest {
    namespace: string;
    path: string;
    requires?: string;
    raw?: string;
    generator?: string;
}
export declare const PROJECT_NAME = "@open-xchange/vite-plugin-ox-manifests";
export declare function applyInputToOptions(input: Dict<string>, options: Rollup.InputOptions): void;
export declare function joinUrlPaths(...paths: string[]): string;
export declare function basepath(src: string): string;
export declare function deepMergeObject(a: Dict, b: Dict): Dict;
export declare function mergeManifests(manifests: OxManifest[]): OxManifest[];
export declare function stringifyJSON({ build }: ResolvedConfig, json: unknown): string;
export declare function waitForReload(server: ViteDevServer): Promise<void>;
export declare function wait(millis: number): Promise<void>;
