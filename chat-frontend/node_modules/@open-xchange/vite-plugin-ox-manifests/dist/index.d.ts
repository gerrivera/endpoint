import type { Plugin } from 'vite';
import type { OxManifest } from './util.js';
import { PROJECT_NAME, mergeManifests } from './util.js';
export type { OxManifest };
export { PROJECT_NAME, mergeManifests };
/**
 * Configuration options for the Vite plugin "vite-plugin-ox-manifests".
 */
export interface VitePluginOxManifestsOptions {
    /**
     * If set to `true`, this plugin will watch manifest changes and reload the
     * UI. Default value is `false`.
     */
    watch?: boolean;
    /**
     * Convenience method to specify additional entry points for the production
     * build. Can be specified as a glob-pattern.
     */
    entryPoints?: string;
    /**
     * Specifies, that every path in a manifest is used as an entry-point for the
     * production build. Default is `true`!
     */
    manifestsAsEntryPoints?: boolean;
    /**
     * If disabled, settings will not be automatically detected and therefore
     * have to provide a manual manifest.json. Default is `true`!
     */
    autoloadSettings?: boolean;
    /**
     * An array of valid file-extensions for entry points. Default is
     * `['js', 'mjs', 'ts']`.
     */
    supportedEntryExtensions?: string[];
    /**
     * An object that will be translated into a `meta.json` file in the root
     * directory.
     */
    meta?: object | null;
}
/**
 * Type shape of the Vite plugin "vite-plugin-ox-manifests".
 */
export interface VitePluginOxManifests extends Plugin {
    getManifests(): Promise<OxManifest[]>;
}
/**
 * Creates a vite-plugin to include manifests in dev and production mode
 */
export default function pluginOxManifests(options?: VitePluginOxManifestsOptions): VitePluginOxManifests;
